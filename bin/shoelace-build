#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var exists = require('fs').existsSync;
var child = require('../lib/child');
var cwd = process.cwd();

// options

program
  .option('-p, --preview', 'build preview files')
  .parse(process.argv);

/**
 * If no component.json in cwd, abort.
 */

var pkgPath = cwd + '/component.json';
if (!exists(pkgPath)) return console.log('error', 'no file or directory at ' + pkgPath);


/**
 * If components are installed, build.
 */

if (exists(cwd + '/components')) return build();

/**
 * If no component dir, component-install just to be safe.
 */

child('component-install', []).next(function() {
  return build();
});

/**
 * Build arguments for standalone component build.
 */

function build() {
   // load component plugins
  var plugins = [];
  plugins.push(__dirname + '/../node_modules/component-stylus');
  if (program.preview) plugins.push(__dirname + '/../preview');

  // build component(1) arguments and spawn child
  var args = ['build',
                '--standalone', require(pkgPath).name,
                '--name', program.preview ? 'preview' : 'build',
                '--use', plugins];
  child('component', args);
}
